// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cal_correlation
DataFrame cal_correlation(NumericMatrix expression_matrix, CharacterVector rownames, std::string gene_of_interest, std::string method);
RcppExport SEXP _GCAS_cal_correlation(SEXP expression_matrixSEXP, SEXP rownamesSEXP, SEXP gene_of_interestSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type expression_matrix(expression_matrixSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rownames(rownamesSEXP);
    Rcpp::traits::input_parameter< std::string >::type gene_of_interest(gene_of_interestSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_correlation(expression_matrix, rownames, gene_of_interest, method));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GCAS_cal_correlation", (DL_FUNC) &_GCAS_cal_correlation, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_GCAS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
